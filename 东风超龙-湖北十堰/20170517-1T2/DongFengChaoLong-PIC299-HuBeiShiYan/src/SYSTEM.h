/* 
 * File:   SYSTEM.h
 * Author: mpszm
 *
 * Created on 2016年8月1日, 下午2:50
 */

#ifndef SYSTEM_H
#define	SYSTEM_H

#include <xc.h>
#include "bsp.h"

//系统EEPROM配置字
//总里程配置
#define  TOTAL_MILES   0L
//单次里程配置
#define  SINGLE_MILES  0
//百米脉冲数
#define  HM_PLUSE      180
//背光亮度值
#define  BACKLIGHT     750
//定义模块地址 0x01 为前部模块 0x02 为后模块  0x03为顶部模块   0x04为仪表
#define  MT_ADDR      4

//软件版本定义
#define  Version      200        //精度0.1  如V1.0
#define  Version_date 20170629

extern unsigned int Fcan_count; //前部模块CAN
extern unsigned int Rcan_count; //后部模块CAN
extern unsigned int Mcan_count; //中部模块CAN
extern unsigned int Ecan_count; //发动机ECU模块CAN
extern unsigned int Vcan_count; //整车控制器VCU模块CAN
extern unsigned int Bcan_count; //电池管理器BMS模块CAN
extern unsigned int Dcan_count; //转向助力DC/AC模块CAN
extern unsigned int Acan_count; //空调AC模块CAN
extern unsigned int ECU_TIME;

extern unsigned int BAT24V_count; //蓄电池低压报警计时

extern unsigned int M_PO11_count; //输出10秒计时

extern unsigned int delay_5s;
extern unsigned int delay_cnt;

extern unsigned long e_total_miles;
extern unsigned int e_address; //EEPROM存储地址
extern unsigned int e_single_miles;
extern unsigned int e_backlight;
extern unsigned int e_hm_pulse;
void EEROM_WriteBackLight(void);
void EEROM_ReadBackLight(void);
void EEROM_WriteHMPulse(void);
void EEROM_ReadHMPulse(void);
void EEROM_WriteSingleMiles(void);
void EEROM_ReadSingleMiles(void);
void EEROM_WriteTotalMiles(void);
void EEROM_ReadTotalMiles(void);
void EEROM_WriteAddress(void);
void EEROM_ReadAddress(void);

extern unsigned int single_miles;
extern unsigned long total_miles;

extern unsigned char frmID;

extern unsigned int  QY_TIME; //气压计时变量
extern unsigned int  KYJ_TIME;//空压机计时变量
extern unsigned char QY_OUT_EN;
extern unsigned int  PT1000[56][3];

/*按键控制接口 */
#define KEY_AV       _RD11       //S1
#define KEY_AV_DR    _TRISD11

#define KEY_SET        _RD10      //S2
#define KEY_SET_DR     _TRISD10

#define KEY_UP         _RD7       //S6
#define KEY_UP_DR      _TRISD7

//仪表主供电电源控制端口
#define PWR_CTRL_DR   _TRISG13  
#define PWR_CTRL      _LATG13
#define PWR_CTRL_RD   _RG13

//蜂鸣器端口

typedef union {
    unsigned char BYTES[2];
    unsigned int WORDS;

    struct {
        unsigned char O1 : 1;
        unsigned char O2 : 1;
        unsigned char O3 : 1;
        unsigned char O4 : 1;
        unsigned char O5 : 1;
        unsigned char O6 : 1;
        unsigned char O7 : 1;
        unsigned char O8 : 1;
        unsigned char O9 : 1;
        unsigned char O10 : 1;
        unsigned char O11 : 1;
        unsigned char O12 : 1;
        unsigned char O13 : 1;
        unsigned char O14 : 1;
        unsigned char O15 : 1;
        unsigned OD : 1;
    } BITS;
} DBCM_POUT;

typedef union {

    struct {
        unsigned kl1 : 1;
        unsigned kl2 : 1;
        unsigned kl3 : 1;
        unsigned kl4 : 1;
        unsigned kl5 : 1;
        unsigned kl6 : 1;
        unsigned kl7 : 1;
        unsigned kl8 : 1;

        unsigned kl9 : 1;
        unsigned kl10 : 1;
        unsigned kl11 : 1;
        unsigned kl12 : 1;
        unsigned kl13 : 1;
        unsigned kl14 : 1;
        unsigned kl15 : 1;
        unsigned : 1;

        unsigned kh1 : 1;
        unsigned add : 1;
        unsigned : 6;
    } BITS;
    unsigned char BYTES[3];
} DBCM_KEY;

typedef union {

    struct {
        unsigned bit1 : 1;
        unsigned bit2 : 1;
        unsigned bit3 : 1;
        unsigned bit4 : 1;
        unsigned bit5 : 1;
        unsigned bit6 : 1;
        unsigned bit7 : 1;
        unsigned bit8 : 1;
    };
    unsigned char byte;
} DATA_BIT;

extern DATA_BIT gKEY[5];

#define  key_set          gKEY[0].bit1 
#define  pkey_set         gKEY[0].bit2 
#define  bkey_set         gKEY[0].bit3
#define  key_up           gKEY[0].bit4
#define  pkey_up          gKEY[0].bit5  
#define  bkey_up          gKEY[0].bit6
#define  key_AV           gKEY[0].bit7
#define  pkey_AV          gKEY[0].bit8
#define  key_reset   key_AV

#define  bkey_AV          gKEY[1].bit1
#define  key_duble        gKEY[1].bit2
#define  F50ms            gKEY[1].bit3
#define  F100ms           gKEY[1].bit4
#define  F500ms           gKEY[1].bit5  
#define  F500ms_LCD       gKEY[1].bit6 //lcd显示更新时间
#define  alarm_update_flag  gKEY[1].bit7//报警显示更新时间
//#define  CLR_single_miles gKEY[1].bit7
#define  save_flag        gKEY[1].bit8

#define  key_long_set     gKEY[2].bit1
#define  M_ON             gKEY[2].bit2  
#define  kFLASH           gKEY[2].bit3
#define  FLASH            gKEY[2].bit4 //转向灯闪烁标志
#define  FLASH_1s         gKEY[2].bit5 
#define  DM1_CLEAR        gKEY[2].bit6 
#define  R_flag           gKEY[2].bit7
#define  bLCD_RESET       gKEY[2].bit8

#define  F300ms           gKEY[3].bit1 // 2016/10/22新增更新时间
#define  F400ms           gKEY[3].bit2
#define  F1000ms          gKEY[3].bit3
#define  FLASH_3s         gKEY[3].bit4
#define  time_flag        gKEY[3].bit5
#define  M_ON_flag        gKEY[3].bit6
#define  rLED_flag        gKEY[3].bit7
#define  F5s              gKEY[3].bit8

#define  F10min           gKEY[4].bit1
#define  F_DISP           gKEY[4].bit2
#define  F_20s            gKEY[4].bit3
#define  F_20s_flag       gKEY[4].bit4
#define  F_3              gKEY[4].bit5
#define  F7s              gKEY[4].bit6



extern DATA_BIT gCTL[8]; //仪表输出控制信息
#define F_PO1   gCTL[0].bit1
#define F_PO2   gCTL[0].bit2
#define F_PO3   gCTL[0].bit3
#define F_PO4   gCTL[0].bit4
#define F_PO5   gCTL[0].bit5
#define F_PO6   gCTL[0].bit6
#define F_PO7   gCTL[0].bit7
#define F_PO8   gCTL[0].bit8 
#define F_PO9   gCTL[1].bit1
#define F_PO10  gCTL[1].bit2
#define F_PO11  gCTL[1].bit3
#define F_PO12  gCTL[1].bit4
#define F_PO13  gCTL[1].bit5
#define F_PO14  gCTL[1].bit6
#define F_PO15  gCTL[1].bit7
#define F_PO16  gCTL[1].bit8  /////

#define M_PO1  gCTL[2].bit1
#define M_PO2  gCTL[2].bit2
#define M_PO3  gCTL[2].bit3
#define M_PO4  gCTL[2].bit4
#define M_PO5  gCTL[2].bit5
#define M_PO6  gCTL[2].bit6
#define M_PO7  gCTL[2].bit7
#define M_PO8  gCTL[2].bit8 
#define M_PO9   gCTL[3].bit1
#define M_PO10  gCTL[3].bit2
#define M_PO11  gCTL[3].bit3
#define M_PO12  gCTL[3].bit4
#define M_PO13  gCTL[3].bit5
#define M_PO14  gCTL[3].bit6
#define M_PO15  gCTL[3].bit7
#define M_PO16  gCTL[3].bit8  /////

#define T_PO1   M_PO1
#define T_PO2   M_PO2
#define T_PO3   M_PO3
#define T_PO4   M_PO4
#define T_PO5   M_PO5
#define T_PO6   M_PO6
#define T_PO7   M_PO7
#define T_PO8   M_PO8
#define T_PO9   M_PO9
#define T_PO10  M_PO10
#define T_PO11  M_PO11
#define T_PO12  M_PO12
#define T_PO13  M_PO13
#define T_PO14  M_PO14
#define T_PO15  M_PO15
#define T_PO16  M_PO16 

#define R_PO1  gCTL[4].bit1
#define R_PO2  gCTL[4].bit2
#define R_PO3  gCTL[4].bit3
#define R_PO4  gCTL[4].bit4
#define R_PO5  gCTL[4].bit5
#define R_PO6  gCTL[4].bit6
#define R_PO7  gCTL[4].bit7
#define R_PO8  gCTL[4].bit8 
#define R_PO9   gCTL[5].bit1
#define R_PO10  gCTL[5].bit2
#define R_PO11  gCTL[5].bit3
#define R_PO12  gCTL[5].bit4
#define R_PO13  gCTL[5].bit5
#define R_PO14  gCTL[5].bit6
#define R_PO15  gCTL[5].bit7
#define R_PO16  gCTL[5].bit8  /////

extern DBCM_KEY fKEY; //前模块功率开关状态
#define fKL1    fKEY.BITS.kl1
#define fKL2    fKEY.BITS.kl2
#define fKL3    fKEY.BITS.kl3
#define fKL4    fKEY.BITS.kl4
#define fKL5    fKEY.BITS.kl5
#define fKL6    fKEY.BITS.kl6
#define fKL7    fKEY.BITS.kl7
#define fKL8    fKEY.BITS.kl8
#define fKL9    fKEY.BITS.kl9
#define fKL10   fKEY.BITS.kl10
#define fKL11   fKEY.BITS.kl11
#define fKL12   fKEY.BITS.kl12
#define fKL13   fKEY.BITS.kl13
#define fKL14   fKEY.BITS.kl14
#define fKL15   fKEY.BITS.kl15
#define fKH1    fKEY.BITS.kh1
#define fADD    fKEY.BITS.add

extern DBCM_KEY mKEY; //中（顶）模块功率开关状态
#define mKL1    mKEY.BITS.kl1
#define mKL2    mKEY.BITS.kl2
#define mKL3    mKEY.BITS.kl3
#define mKL4    mKEY.BITS.kl4
#define mKL5    mKEY.BITS.kl5
#define mKL6    mKEY.BITS.kl6
#define mKL7    mKEY.BITS.kl7
#define mKL8    mKEY.BITS.kl8
#define mKL9    mKEY.BITS.kl9
#define mKL10   mKEY.BITS.kl10
#define mKL11   mKEY.BITS.kl11
#define mKL12   mKEY.BITS.kl12
#define mKL13   mKEY.BITS.kl13
#define mKL14   mKEY.BITS.kl14
#define mKL15   mKEY.BITS.kl15
#define mKH1    mKEY.BITS.kh1
#define mADD    mKEY.BITS.add

extern DBCM_KEY rKEY; //后模块功率开关状态
#define rKL1    rKEY.BITS.kl1
#define rKL2    rKEY.BITS.kl2
#define rKL3    rKEY.BITS.kl3
#define rKL4    rKEY.BITS.kl4
#define rKL5    rKEY.BITS.kl5
#define rKL6    rKEY.BITS.kl6
#define rKL7    rKEY.BITS.kl7
#define rKL8    rKEY.BITS.kl8
#define rKL9    rKEY.BITS.kl9
#define rKL10   rKEY.BITS.kl10
#define rKL11   rKEY.BITS.kl11
#define rKL12   rKEY.BITS.kl12
#define rKL13   rKEY.BITS.kl13
#define rKL14   rKEY.BITS.kl14
#define rKL15   rKEY.BITS.kl15
#define rKH1    rKEY.BITS.kh1
#define rADD    rKEY.BITS.add

#define CAN_TIME 30//CAN节点故障报警
#define BAT24_TIME 100//蓄电池电压过低报警10秒

extern unsigned int fFreq; //前模块频率
extern unsigned int mFreq; //中（顶）模块频率
extern unsigned int rFreq; //后模块频率
extern unsigned int fSpeed; //前模块折算车速
extern unsigned int mSpeed; //中（顶）模块折算车速
extern unsigned int rSpeed; //后模块折算车速
extern unsigned int fADR[2]; //前模块电阻值
extern unsigned int mADR[2]; //中（顶）模块电阻值
extern unsigned int rADR[2]; //后模块电阻值
extern DBCM_POUT fPOUT; //前模块功率输出状态
extern DBCM_POUT mPOUT; //中（顶）模块功率输出状态
extern DBCM_POUT rPOUT; //后模块功率输出状态
extern unsigned char fPF[16]; //前模块功率输出故障
extern unsigned char mPF[16]; //中（顶）模块功率故障
extern unsigned char rPF[16]; //后模块功率输出故障
extern unsigned int fpcur[15];//前模块功率输出电流
extern unsigned int mpcur[15];//中模块功率输出电流
extern unsigned int rpcur[15];//后模块功率输出电流

extern unsigned int ADR[8]; //模拟量采集   10/15
extern unsigned int ADV[8]; //模拟量采集 

extern unsigned int pSpeed; //外部CAN换算车速
//extern const unsigned char BMP_LOGO[];
//extern const unsigned char BMP_LOGObmp[];

/*************************************/
//电机
extern unsigned char DMC_Status;//电机控制器基本状态
extern unsigned char DMC_Level;//电机控制器故障级别
extern unsigned char DMC_Life;//电机生命
extern unsigned int  DMC_Torque;//电机转矩
extern unsigned int  DMC_Rpm;//电机转速
extern unsigned char DMC_Speed;//车速
extern unsigned char DMC_Gear;//档位

extern unsigned int  DMC_Voltage;//电机控制器母线电压
extern unsigned int  DMC_Current;//电机控制器母线电流
extern unsigned char DMC_Controller_temp;//电机控制器温度
extern unsigned char DMC_Moto_temp;//电机温度
extern unsigned char DMC_Protect_code;//电机控制器保护代码
extern unsigned char DMC_Verison;//电机控制器版本号

extern unsigned char DMC_Accelerator_percent;//油门踏板开度
extern unsigned char DMC_Brake_percent;//制动踏板开度
extern unsigned char DMC_Charge;//充放电状态
extern unsigned char DMC_GB_Gear; //国标档位

//气泵控制器
extern unsigned int  DMQ_Rpm;//气泵控制器电机转速
extern unsigned int  DMQ_Voltage;//气泵控制器母线电压
extern unsigned char DMQ_Current;//气泵控制器电机母线电流
extern unsigned char DMQ_temp; //气泵温度
extern unsigned char DMQ_Controller_temp;//气泵控制器温度
extern unsigned char DMQ_Life;//气泵控制器生命
extern unsigned char DMQ_Status;//气泵控制器基本状态

//DCDC
extern unsigned char DCDC_Status;//DCDC基本状态
extern unsigned char DCDC_Temp;//DCDC模块温度
extern unsigned int  DCDC_Voltage;//DCDC输出电压
extern unsigned int  DCDC_Current;//DCDC输出电流
extern unsigned char DCDC_Code;//DCDC故障代码
extern unsigned char DCDC_Verison;//DCDC版本号

//油泵控制器
extern unsigned int  DMY_Rpm;//油泵控制器电机转速
extern unsigned int  DMY_Voltage;//油泵控制器母线电压
extern unsigned char DMY_Current;//油泵控制器电机母线电流
extern unsigned char DMY_Controller_temp;//油泵控制器温度
extern unsigned char DMY_Life;//油泵控制器生命
extern unsigned char DMY_Status;//油泵控制器基本状态

//空调
extern unsigned char Air_Status_Flag1; //空调状态1
extern unsigned char Air_Status_Flag2; //空调状态2
extern unsigned char Air_Status_Flag3; //空调状态3
extern unsigned char Air_Indoor_t; //室内温度
extern unsigned char Air_Outdoor_t; //室外温度
extern unsigned char Air_Set_t; //设定

//BMS
extern unsigned char BMS_Type;//BMS参数类型
extern unsigned char Battery_Case_Total_Number;//电池箱体个数
extern unsigned char BMS_Unit_Number;//电池管理系统从控单元个数
extern unsigned int  Battery_Cell_Total_Number;//电池总串数
extern unsigned int  BMS_Nubmer;//电池管理系统编号

extern unsigned char Battery_Case_number;//电池箱号n
extern unsigned char Battery_Cell_number;//电池箱n内电池串数
extern unsigned char Battery_Cell_Temp_Number;//电池箱内电池温度探头个数

extern unsigned int  BMS_V;//电池总电压
extern unsigned int  BMS_A;//电池总电流
extern unsigned char BMS_SOC;//电池SOC
extern unsigned char BMS_Life;//BMS LIFE
extern unsigned char BMS_Status_Flag1;//电池状态1
extern unsigned char BMS_Status_Flag2;//电池状态2

extern unsigned int  Battery_Single_H; //电池单体高电压
extern unsigned int  Battery_Single_L; //电池单体低电压
extern unsigned char Battery_Temp_H; //电池单体最高温度
extern unsigned char Battery_Temp_L; //电池单体最低温度
extern unsigned char BMS_Status_Flag3;//电池状态3
extern unsigned char BMS_Status_Flag4;//继电器状态

extern unsigned char Battery_Single_H_Positon_Case; //电池单体高电压箱号
extern unsigned char Battery_Single_H_Positon_Cell; //电池单体高电压位置
extern unsigned char Battery_Single_L_Positon_Case; //电池单体低电压箱号
extern unsigned char Battery_Single_L_Positon_Cell; //电池单体低电压位置
extern unsigned char Battery_Temp_H_Positon_Case; //电池单体高温度箱号
extern unsigned char Battery_Temp_H_Positon_Cell; //电池单体高温度位置
extern unsigned char Battery_Temp_L_Positon_Case; //电池单体低温度箱号
extern unsigned char Battery_Temp_L_Positon_Cell; //电池单体低温度位置

extern unsigned char BMU_Comm_Status1;//1-8   BMU通讯状态
extern unsigned char BMU_Comm_Status2;//9-16  BMU通讯状态
extern unsigned char BMU_Comm_Status3;//17-24 BMU通讯状态
extern unsigned char BMU_Comm_Status4; //25-32 BMU通讯状态

extern unsigned char BMU_Bala_Status1; //1-8   BMU均衡状态
extern unsigned char BMU_Bala_Status2; //9-16  BMU均衡状态
extern unsigned char BMU_Bala_Status3; //17-24 BMU均衡状态
extern unsigned char BMU_Bala_Status4; //25-32 BMU均衡状态

extern unsigned char DC1positive_Temp;//充电插头DC1+温度
extern unsigned char DC1negative_Temp;//充电插头DC1-温度
extern unsigned char DC2positive_Temp;//充电插头DC2+温度
extern unsigned char DC2negative_Temp;//充电插头DC2-温度
extern unsigned int  Ohm_Positive;//总正绝缘阻值 
extern unsigned int  Ohm_Negative;//总负绝缘阻值 

extern unsigned int  Energe_Rest;//剩余能量
extern unsigned char BMS_Status_Flag5;
extern unsigned char BMS_Status_Flag6;

extern unsigned char Battery_Single_H_Positon_Total;//最高单体电压位置（总数）
extern unsigned char Battery_Single_L_Positon_Total;//最低单体电压位置（总数）
extern unsigned char Battery_Temp_H_Positon_Total;//最高单体温度位置（总数）
extern unsigned char Battery_Temp_L_Positon_Total;//最低单体温度位置（总数）
extern unsigned char Battery_Single_H_Pack;//最高单体电压包号
extern unsigned char Battery_Single_L_Pack;//最低单体电压包号
extern unsigned char Battery_Temp_H_Pack;//最高单体温度包号
extern unsigned char Battery_Temp_L_Pack;//最低单体温度包号

extern unsigned char BMU_Number;//BMU号

extern unsigned char Battery_Pack; //电池报文包数
//extern unsigned int  Battery_Voltage[12]; //电池单体电压
extern unsigned int  Battery_Temp[12]; //电池单体温度

/**********随州协议变量************/
/*extern unsigned int moto_voltage; //电机电压
extern unsigned int moto_current; //电机电流
extern unsigned int moto_speed; //电动转速
extern unsigned char Motor_Temperature; //电机温度
extern unsigned char Inverter_t; //逆变器温度

extern unsigned char Accelerator; //油门开度
extern unsigned int Engine_Speed;//发动机转速

extern unsigned int Fule_rate;//油耗
extern unsigned char water_temp;//水温
extern unsigned char Engine_Fuhe;//发动机负荷
extern unsigned char Niaosu;//尿素;
extern unsigned char Accelerator_Shiji; //油门踏板实际
extern unsigned char Engine_oil_press; //机油压力
extern unsigned char ambient_air_temperature; //周围空气温度

extern unsigned char Current_Gear; //档位
extern unsigned char TCU_Position;//离合位置
extern unsigned char TCU_warn;//变速箱故障
extern unsigned char STOP;//停车故障
extern unsigned int Speed_rmp; //输出轴转速
extern unsigned char Car_mode;//整车模式
extern unsigned char TCU_code;//变速箱故障代码
extern unsigned char TCU_level;//变速箱故障等级

extern DATA_BIT CAN_KEY[4];
#define  CAN_ON           CAN_KEY[0].bit1
#define  CAN_ACC          CAN_KEY[0].bit2  
#define  Diagnosis        CAN_KEY[0].bit3  
#define  Mode_S           CAN_KEY[0].bit4  
#define  AC               CAN_KEY[0].bit5  
#define  Hybrid           CAN_KEY[0].bit6  
#define  Electric         CAN_KEY[0].bit7  
#define  Tradition        CAN_KEY[0].bit8  

#define  High_Voltage     CAN_KEY[1].bit5
#define  Charge_Check     CAN_KEY[1].bit6  

#define  Kt               CAN_KEY[2].bit2  

#define  Brake_Pedal      CAN_KEY[3].bit1 
extern unsigned char Brake_percent; //制动踏板开度
extern unsigned char Speed_percent; //加速踏板开度
extern unsigned char Digit_input3;//数字量输入3

extern unsigned long Program;//程序版本
extern unsigned long tcu_spn; //TCU故障码
extern unsigned char tcu_fmi;
extern unsigned long tcu_cm; 
extern unsigned char tcu_oc;
extern unsigned char Car_LIFE;//整车控制器

extern unsigned int BMS_V; //电池电压
extern unsigned char BMS_SOC; //电池SOC
extern unsigned int BMS_A; //电池电流
extern unsigned char Status_Flag1;
extern unsigned char Status_Flag2;
extern unsigned char Status_Flag3;

extern unsigned int BMS_A_charge; //最大充电电流
extern unsigned int BMS_A_discharge; //最大电流
extern unsigned char Warn_level;//故障等级
extern unsigned int BMS_V_average; //电池平均电压
extern unsigned char BMS_T_H;//电池最高温度

extern unsigned int Oum_zheng; //绝缘正阻值
extern unsigned int Oum_fu; //绝缘负阻值
extern unsigned int Battery_single_H; //电池单体高电压
extern unsigned int Battery_single_L; //电池单体低电压

extern unsigned char Battery_number[10];//电池编号
extern unsigned int Battery_voltage[10];//电池单体电压

extern unsigned char Battery_number_t[10];//电池温度编号
extern unsigned int Battery_temp[10];//电池单体温度

extern unsigned int DCAC_W;
extern unsigned int DCAC_V;
extern unsigned int DCAC_U;
extern unsigned char Sanreqi_t;//散热器温度
extern unsigned char DCAC_Warn_code;//故障代码

extern unsigned char AC_Warn_code;//AC故障代码
extern DATA_BIT AC_KEY[2];
#define  AC_opean         AC_KEY[0].bit6
#define  AC_mind_speed    AC_KEY[0].bit7
#define  AC_High_speed    AC_KEY[0].bit8

#define  AC_warn1         AC_KEY[1].bit1
#define  AC_cold1_shuang  AC_KEY[1].bit2
#define  AC_wind          AC_KEY[1].bit3
#define  AC_save          AC_KEY[1].bit4
#define  AC_cold2_shuang  AC_KEY[1].bit5
#define  AC_cold2         AC_KEY[1].bit6
#define  AC_cold1         AC_KEY[1].bit8
extern unsigned char Indoor_t;//室内温度
extern unsigned char Outdoor_t;//室外温度
extern unsigned char Set_t;//设定
extern unsigned char AC_req;//制冷请求
extern unsigned char AC_LIFE;//AC生命


extern unsigned char battle_t; //电池均温
extern unsigned char battle_t_warn; //电池过温报警
extern unsigned char battle_jueyuan_warn; //绝缘过低报警
extern unsigned char battle_higtv1_warn; //高压电池1故障
extern unsigned char battle_higtv2_warn; //高压电池2故障
extern unsigned char moto_t_warn; //电机过温
extern unsigned char moto_ready; //ready信号
extern unsigned char xudc; //蓄电池异常
extern unsigned char moto_warn; //电机故障

extern unsigned char BMS_offline_warn; //电池不在线
extern unsigned char MCU_offline_warn; //电机不在线
extern unsigned char TCU_offline_warn; //变速箱不在线
extern unsigned char Engine_offline_warn; //发动机不在线
extern unsigned char Engine_wait; //发动机怠速
extern unsigned char EV; //模式
extern unsigned char Signal_charge; //充电信号


extern unsigned char mil_lamp_request; //黄色三级报警
extern unsigned char fail_mode; //文字报警
extern unsigned char mil_buzz_request; //蜂鸣器响
extern unsigned long hcu_spn; //HCU故障码
extern unsigned char hcu_fmi;


extern unsigned char Eng_static_test; //发动机稳态转速测试
extern unsigned char tcu_start_allow; //发动机运行启动


extern unsigned char Lamp_status_YELLOW; //变速箱黄灯状态
extern unsigned char Lamp_status_RED; //变速箱红灯状态

extern unsigned long ccu_spn; //CCU故障码
extern unsigned char ccu_fmi;

extern unsigned long ecu_spn; //ECU故障码
extern unsigned char ecu_fmi;



extern unsigned char Motor_Temperature; //电机温度

extern unsigned int ENG_start_req; //仪表控制启动
extern unsigned long mot_work_time; //电机工作累积时间
extern unsigned char mot_work_percent; //电机工作时间比
extern unsigned char DCDC_ctrl; //DCDC状态
extern unsigned char hcu_starter_forbid; //起动机工作
extern unsigned char aircompress_enable; //压缩机
extern unsigned char Speed_lim_mode;//限速模式

extern unsigned char water_level;//水位

extern unsigned char Wait_start;//等待启动
extern unsigned char Maintain_warn;//维护报警
extern unsigned char Stop_warn;//停机报警
extern unsigned char Engine_warn;//发动机故障
*/


typedef union {
 struct {
 unsigned int  boxid;//箱体号
 unsigned int  vol;   //电池电压
 };
 unsigned char byte[4];
}DC_DATA; 

typedef union {
 struct {
  unsigned char  ID;//箱体号
  unsigned char  TEMP;   //电池电压
 };
 unsigned char byte[2];
}DC_TEMP;


/******************************************************************/
 #define  BAT_NUM      96  //单体电池个数
 #define  CAN_BAT_NUM  24   //单体电池电压CAN发送数据帧数，
 #define  BAT_BOX_NUM  10               //一帧包含四个单体电压，不足四个按四个计算      

//整车控制器变量 
extern unsigned int  DJcontroler_voltage;//电机控制器输入电压
extern unsigned int  DJcontroler_current; //电机控制器入电流高
extern unsigned int  DJ_speed;
extern unsigned char DJ_temperature;             //驱动电机温度
extern unsigned char DJcontroler_temperature;    //驱动电机控制器温度

extern unsigned char DJ_temperature1;         //电机温度
extern unsigned char DJcontroler_temperature1;//电机控制器温度
extern unsigned char VCU_Status[10];     //VCU状态
extern unsigned char Gear;               //档位
extern unsigned int  XHLC;               //续航里程
extern unsigned char DJ_version;         //MCU 软件版本信息
extern unsigned char DJ_Status[10];      //电机控制系统状态
extern unsigned char DJ_fault;           //MCU 系统故障代码
extern unsigned int  DJ_Power;           //电机实时输出功

extern unsigned int  DJtorque;            //电机输出目标转矩
extern unsigned char system_state;        //系统工作状态
extern unsigned int  system_fault;        //系统故障码
extern unsigned char fault_grade;        //故障等级
extern unsigned long version;            //程序版本号高 3字节
extern unsigned char controler_LIFE; //整车控制器Life
  
extern unsigned char KZQversion[7];
extern unsigned char DJversion[7]; 

extern unsigned char PDX_state[2]; 
extern unsigned char DCDC1_temp;
extern unsigned char DCDC1_fault;
extern unsigned char DCDC2_temp;
extern unsigned char DCDC2_fault;
extern unsigned char DCDC3_temp;
extern unsigned char DCDC3_fault;

extern unsigned char KEY_state[4];  //开关量状态  //档位
extern unsigned int  traction_st[2];   //加速踏板百分比
extern unsigned char brake_st[2];      //制动踏板百分比

extern unsigned int  anode_R;     //正端对地绝缘电阻
extern unsigned int  negative_R;  //负端对地绝缘电阻
extern unsigned char eror_R;      //绝缘故障等级
extern unsigned char R_state[3];  //

extern unsigned char SX_state;
extern unsigned char SX_fault;

extern unsigned int  SX_DCvoltage;
extern unsigned int  SX_DRvoltage;
extern unsigned int  SX_DCcurrent;
extern unsigned int  SX_DRcurrent;

extern unsigned char KT_Status[2];
extern unsigned char KT_temp[3];
extern unsigned long KT_current;
extern unsigned char KT_life;

extern unsigned int  CDJ_SRvoltage;
extern unsigned int  CDJ_SRcurrent;
extern unsigned int  CDJ_SCvoltage;
extern unsigned int  CDJ_SCcurrent;

extern unsigned int  CDJ_power;
extern unsigned char CDJ_temp;
extern unsigned char CDJ_Status;
extern unsigned char CDJ_fault;
extern unsigned char CDJ_grade;
extern unsigned char CDJ_lift;

//电池电池管理相关报文 
extern unsigned int  DC_voltage; //电池电压 
extern unsigned int  DC_current; //电池电流 
extern unsigned char DC_SOC;
extern unsigned char DC_Status[5];

extern unsigned int  CD_current; //当前最大允许充电电流
extern unsigned int  FD_current; //当前最大允许放电电流
extern unsigned char DC_fault;  //系统故障等级
extern unsigned int  Vaverage; //
extern unsigned char Tmax;     //最大单体电池温度
extern unsigned char Tmin;     //最小单体电池温度


extern unsigned char JY_life;
extern unsigned char JY_Status;
extern unsigned int  DCanode_R;     //正端对地绝缘电阻
extern unsigned int  DCnegative_R;  //负端对地绝缘电阻
extern unsigned int  Vmax;     //最大单体电压
extern unsigned int  Vmin;     //最小单体电压
 
extern unsigned char BMU_NUM;   //定义模块数量
extern unsigned int  Battery_Voltage[10][50]; //电池单体电压
extern unsigned int  Battery_Voltage_Sum[10]; //电池单体电压每箱数量
extern unsigned int  Battery_Temp_Sum[10];    //电池单体温度每箱数量
extern unsigned char DC_Temp[10][10];
extern unsigned char DC_JH_Status[10][4];//电池均衡状态 模块内  1-12 节
extern unsigned char DC_JY[10];//绝缘电阻
extern unsigned char DC_DT_sum;//单体电池个数( 串数) 
extern unsigned char DC_TEMP_sum;//单体温度个数
extern unsigned char Vmax_num[2];//最高单体电压电池位置   Vmax_num[1]//最高单体电压电池位置：单体电池编号
extern unsigned char Vmin_num[2];//最低单体电压电池位置   Vmin_num[1]//最低单体电压电池位置：单体电池编号     
extern unsigned char Tmax_num[2];//最高单体温度位置       Tmax_num[1]//最高单体温度位置：单体温度编号
extern unsigned char Tmin_num[2];//最低单体温度位置       Tmin_num[1]//最低单体温度位置：单体温度编号

extern unsigned char Vmax_box;//最高单体电压电池位置：电池箱编号
extern unsigned char Vmin_box;//最低单体电压电池位置：电池箱编号
extern unsigned char Tmax_box;//最高单体温度位置：温度箱箱号       
extern unsigned char Tmin_box;//最低单体温度位置：温度箱箱号 


//助力转向DC/A
extern unsigned int  YB_Wcurrent;
extern unsigned int  YB_Vcurrent;
extern unsigned int  YB_Ucurrent; 
extern unsigned char YB_temp;   //油泵散热温度
extern unsigned char YB_fault;  //油泵故障码

//传统空调
extern unsigned char KT_fault;
extern unsigned char KT_Status[2];
extern unsigned char KT_temp1;
extern unsigned char KT_temp2;
extern unsigned char KT_temp3;
extern unsigned char KT_comd;
extern unsigned char KT_life;
extern unsigned int BUZZ_COUNT;

extern DC_DATA  voltage_bat[10];    //单体电池电压
//BMS1只发送电压偏差最大的10个单体，正向5个，负向5个

extern DC_TEMP  temp_bat[10];//单体电池温度
//?BMS1只发送温度偏差最大的10个单体。
extern unsigned int Vspeed;

//油泵控制器
extern unsigned int  YB_voltage;
extern unsigned int  YB_current;  
extern unsigned char YB_temp;   //油泵散热温度
extern unsigned char YB_fault;  //油泵故障码
//转向助力泵（DC/AC） 空压机 气泵（DC/AC）电源
extern unsigned int  DCAC_speed[2];//电机估计转速
extern unsigned int  DCAC_current[2];//输出相电流
extern unsigned char DCAC_temp[2];//控制器温度
extern unsigned char DCAC_life[2];//控制器生命信号
extern unsigned char DCAC_Status[2];
extern unsigned char DCAC_fault[2];

extern unsigned int  DCDC_voltage;
extern unsigned int  DCDC_current;
extern unsigned char DCDC_fault;
//气泵控制器
extern unsigned int  QB_voltage_IN; 
extern unsigned int  QB_voltage_OUT;
extern unsigned int  QB_current;    
extern unsigned char QB_temp;        
extern unsigned char QB_fault;      
//灭火器
extern unsigned char MHQ_Number;
extern unsigned char MHQ_Alarm;
extern unsigned char MHQ_life;
extern unsigned char MHQ_fault;


/*****************分包处理CAN*****************/

typedef union {

    struct {
        unsigned long SPN1 : 19;
        unsigned FMI : 5;
        unsigned CM : 1;
        unsigned OC : 7;
    }; //这个结构需要验证
    unsigned char bData[4];
} DTC;

typedef union {

    struct {
        unsigned ProtectLampStatus : 2;
        unsigned AmberWarningLampStatus : 2;
        unsigned RedStopLampState : 2;
        unsigned MalfunctionIndicatorLampStatus : 2;
        unsigned FlashProtectLamp : 2;
        unsigned FlashAmberWarningLamp : 2;
        unsigned FlashRedStopLamp : 2;
        unsigned FlashMalfunctionIndicatorLamp : 2;
        DTC DTC1;
        DTC DTC2;
        DTC DTC3;
        DTC DTC4;
        DTC DTC5;
    };
    unsigned char bData[22];
} DM1;

extern DM1 CAN_18FECAEF;
extern unsigned char CAN_18FECAEF_len;
extern DM1 CAN_18FECA03;
extern unsigned char CAN_18FECA03_len;
extern DM1 CAN_18FECAF5;
extern unsigned char CAN_18FECAF5_len;
extern DM1 CAN_18FECA00;
extern unsigned char CAN_18FECA00_len;

typedef struct {
    unsigned char pack; //CAN分几包数据传输
    unsigned char flag; //CAN缓存接收完标记
    unsigned char len; //CAN缓存长度
    unsigned char buf[50]; //CAN缓存数组
} CAN_CACHE;
extern CAN_CACHE m_can;//HCU缓存
extern CAN_CACHE n_can;//TCU缓存
extern CAN_CACHE c_can;//CCU缓存

/******************************************************************/

void System_Init(void);
void SYSTME_Logic(void);
void LED_Logic(void);

void BCAN_SendCtl(void);
void PCAN_CCVS(void);
void Count_ADR(void);
void PCAN_send_req(void);
void PCAN_send_mile(void);

void DM_HCU(unsigned char x);
void DM_TCU(unsigned char x);
void DM_CCU(unsigned char x);
void DM_ECU(unsigned char x);
//dispaly
void LCD_Exec(void);
//void TIMER4_Init(void);
/******************************/
/********************************************/

#endif	/* SYSTEM_H */

